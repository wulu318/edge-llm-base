name: Build Edge LLM Base All-in-One Installers

on: [push, workflow_dispatch]

jobs:
  build-windows-all-in-one:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
      - name: Install dependencies
        run: |
          pip install llama-cpp-python[server] pystray pillow pyinstaller uvicorn
      - name: Download Microsoft C++ Redistributable
        # 下载官方的VC++运行库安装包
        run: Invoke-WebRequest -Uri https://aka.ms/vs/17/release/vc_redist.x64.exe -OutFile vc_redist.x64.exe
      - name: Build PyInstaller executable
        # 在这里我们把 icon.png 和模型文件都作为数据文件添加
        # 这样可以确保它们被正确地包含在编译目录中
        run: |
          python -c "from edge_llm_base import create_image; create_image('🤖').save('icon.png')"
          pyinstaller --onefile --windowed --add-data "icon.png;." edge_llm_base.py
      - name: Download model from Hugging Face
        run: Invoke-WebRequest -Uri https://huggingface.co/a5656789/qwen3-0.6b-q4/resolve/main/qwen3-0.6b-q4.gguf -OutFile dist/qwen3-0.6b-q4.gguf
      - name: Install NSIS
        run: choco install nsis -y
      - name: Create NSIS installer script with C++ Redist
        run: |
          echo '!define PRODUCT_NAME "Edge LLM Base"' > installer.nsi
          echo '!define PRODUCT_VERSION "1.0"' >> installer.nsi
          echo 'OutFile "setup-standalone.exe"' >> installer.nsi
          echo 'InstallDir "$PROGRAMFILES\EdgeLLMBase"' >> installer.nsi
          echo 'RequestExecutionLevel admin' >> installer.nsi
          echo 'Page directory' >> installer.nsi
          echo 'Page instfiles' >> installer.nsi
          echo 'Section "MainSection"' >> installer.nsi
          echo '  SetOutPath "$INSTDIR"' >> installer.nsi
          # 将 VC++ 运行库打包到安装程序中，并在安装时静默执行
          echo '  File "vc_redist.x64.exe"' >> installer.nsi
          echo '  ExecWait ''"$INSTDIR\vc_redist.x64.exe" /install /quiet /norestart''' >> installer.nsi
          echo '  Delete "$INSTDIR\vc_redist.x64.exe"' >> installer.nsi
          # 复制主程序和模型
          echo '  File "dist\edge_llm_base.exe"' >> installer.nsi
          echo '  File "dist\qwen3-0.6b-q4.gguf"' >> installer.nsi
          echo '  WriteUninstaller "$INSTDIR\uninstall.exe"' >> installer.nsi
          echo '  CreateShortCut "$DESKTOP\Edge LLM Base.lnk" "$INSTDIR\edge_llm_base.exe"' >> installer.nsi
          echo 'SectionEnd' >> installer.nsi
          # ... (完整的卸载逻辑)
      - name: Build NSIS installer
        run: makensis installer.nsi
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: windows-installer-standalone
          path: setup-standalone.exe

  build-linux-appimage:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        arch: [x86_64, aarch64]
    steps:
      - uses: actions/checkout@v4
      - name: Prepare for ARM64 build if needed
        if: matrix.arch == 'aarch64'
        uses: docker/setup-qemu-action@v3
      - name: Build AppImage
        uses: aminya/setup-cross-toolchain-action@v2
        with:
          arch: ${{ matrix.arch }}
          skip-qemu: true
      - run: |
          set -ex
          # 安装系统依赖
          sudo apt-get update
          sudo apt-get install -y fuse libglib2.0-0
          
          # 创建虚拟Python环境
          python3 -m venv venv
          source venv/bin/activate
          
          # 安装Python包
          pip install --upgrade pip
          pip install llama-cpp-python[server] pystray pillow pyinstaller uvicorn
          
          # 创建图标和.desktop文件
          python -c "from edge_llm_base import create_image; create_image('🤖').save('edge_llm_base.png')"
          echo '[Desktop Entry]' > edge_llm_base.desktop
          echo 'Version=1.0' >> edge_llm_base.desktop
          echo 'Type=Application' >> edge_llm_base.desktop
          echo 'Name=Edge LLM Base' >> edge_llm_base.desktop
          echo 'Exec=edge_llm_base' >> edge_llm_base.desktop
          echo 'Icon=edge_llm_base' >> edge_llm_base.desktop
          echo 'Categories=Utility;' >> edge_llm_base.desktop

          # 编译Python脚本
          pyinstaller --noconfirm --onefile --windowed \
            --add-data "edge_llm_base.png:." \
            --add-data "edge_llm_base.desktop:." \
            edge_llm_base.py

          # 下载模型
          wget https://huggingface.co/a5656789/qwen3-0.6b-q4/resolve/main/qwen3-0.6b-q4.gguf -O dist/qwen3-0.6b-q4.gguf
          
          # 下载linuxdeploy和appimagetool
          wget https://github.com/linuxdeploy/linuxdeploy/releases/download/continuous/linuxdeploy-${{ matrix.arch }}.AppImage -O linuxdeploy.AppImage
          wget https://github.com/AppImage/AppImageKit/releases/download/continuous/appimagetool-${{ matrix.arch }}.AppImage -O appimagetool.AppImage
          chmod +x linuxdeploy.AppImage appimagetool.AppImage
          
          # 使用linuxdeploy创建AppDir，它会自动打包所有依赖
          ./linuxdeploy.AppImage --appdir AppDir \
            -e dist/edge_llm_base \
            -d dist/edge_llm_base.desktop \
            -i dist/edge_llm_base.png \
            --output appimage

          # 将模型文件复制到AppDir中，确保它和可执行文件在一起
          cp dist/qwen3-0.6b-q4.gguf AppDir/usr/bin/

          # 创建最终的AppImage文件
          ./appimagetool.AppImage AppDir
        env:
          ARCH: ${{ matrix.arch }}
          
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: linux-appimage-${{ matrix.arch }}
          path: ./*.AppImage