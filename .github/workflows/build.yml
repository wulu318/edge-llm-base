name: Build Edge LLM Base Installers with Model

on: [push, workflow_dispatch]

jobs:
  build-windows:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
      - name: Install dependencies
        run: |
          pip install llama-cpp-python[server] pystray pillow pyinstaller
      
      - name: Download model
        run: Invoke-WebRequest -Uri https://huggingface.co/a5656789/qwen3-0.6b-q4/resolve/main/qwen3-0.6b-q4.gguf -OutFile qwen3-0.6b-q4.gguf

      # 关键改动: 使用 cat <<EOF 保证缩进正确
      - name: Create build.spec file
        shell: bash # 统一使用 bash 以便使用 cat
        run: |
          # 在 Windows runner 上，需要用 cygpath 转换路径并转义反斜杠
          pythonPath=$(cygpath -w $(which python) | sed 's/\\/\\\\/g')
          
          cat > build.spec <<EOF
# build.spec
import sys
a = Analysis(
    ['edge_llm_base.py'],
    pathex=[],
    binaries=[('$pythonPath', '.')],
    datas=[
        ('server_runner.py', '.'),
        ('qwen3-0.6b-q4.gguf', '.')
    ],
    hiddenimports=['llama_cpp.server'],
    hookspath=[],
    runtime_hooks=[],
    excludes=[],
    win_no_prefer_redirects=False,
    win_private_assemblies=False,
    noarchive=False
)
pyz = PYZ(a.pure, a.zipped_data)
exe = EXE(
    pyz,
    a.scripts,
    [],
    exclude_binaries=True,
    name='edge_llm_base',
    debug=False,
    bootloader_ignore_signals=False,
    strip=False,
    upx=True,
    console=False, # 对应 --windowed
    icon=None
)
coll = COLLECT(
    exe,
    a.binaries,
    a.zipfiles,
    a.datas,
    strip=False,
    upx=True,
    upx_exclude=[],
    name='edge_llm_base'
)
EOF

      - name: Build PyInstaller executable from spec
        run: pyinstaller build.spec

      - name: Install NSIS
        run: choco install nsis -y
      
      - name: Create NSIS installer script
        run: |
          echo '!define PRODUCT_NAME "Edge LLM Base"' > installer.nsi
          echo '!define PRODUCT_VERSION "1.0"' >> installer.nsi
          echo '!define PRODUCT_PUBLISHER "YourName"' >> installer.nsi
          echo 'SetCompressor lzma' >> installer.nsi
          echo 'Name "${PRODUCT_NAME} ${PRODUCT_VERSION}"' >> installer.nsi
          echo 'OutFile "setup.exe"' >> installer.nsi
          echo 'InstallDir "$PROGRAMFILES\EdgeLLMBase"' >> installer.nsi
          echo 'Page components' >> installer.nsi
          echo 'Page directory' >> installer.nsi
          echo 'Page instfiles' >> installer.nsi
          echo 'ShowInstDetails show' >> installer.nsi
          echo 'Section "MainSection" SEC01' >> installer.nsi
          echo '  SetOutPath "$INSTDIR"' >> installer.nsi
          echo '  SetOverwrite ifnewer' >> installer.nsi
          echo '  File /r "dist\edge_llm_base\*"' >> installer.nsi
          echo '  CreateDirectory "$SMPROGRAMS\Edge LLM Base"' >> installer.nsi
          echo '  CreateShortCut "$SMPROGRAMS\Edge LLM Base\Edge LLM Base.lnk" "$INSTDIR\edge_llm_base.exe"' >> installer.nsi
          echo '  CreateShortCut "$DESKTOP\Edge LLM Base.lnk" "$INSTDIR\edge_llm_base.exe"' >> installer.nsi
          echo 'SectionEnd' >> installer.nsi
          echo 'Section -Post' >> installer.nsi
          echo '  WriteUninstaller "$INSTDIR\uninstall.exe"' >> installer.nsi
          echo '  WriteRegStr HKLM "Software\Microsoft\Windows\CurrentVersion\Uninstall\${PRODUCT_NAME}" "DisplayName" "${PRODUCT_NAME}"' >> installer.nsi
          echo '  WriteRegStr HKLM "Software\Microsoft\Windows\CurrentVersion\Uninstall\${PRODUCT_NAME}" "UninstallString" "$INSTDIR\uninstall.exe"' >> installer.nsi
          echo 'SectionEnd' >> installer.nsi
          echo 'Section "Uninstall"' >> installer.nsi
          echo '  RMDir /r "$INSTDIR"' >> installer.nsi
          echo '  Delete "$SMPROGRAMS\Edge LLM Base\Edge LLM Base.lnk"' >> installer.nsi
          echo '  Delete "$DESKTOP\Edge LLM Base.lnk"' >> installer.nsi
          echo '  RMDir "$SMPROGRAMS\Edge LLM Base"' >> installer.nsi
          echo '  DeleteRegKey HKLM "Software\Microsoft\Windows\CurrentVersion\Uninstall\${PRODUCT_NAME}"' >> installer.nsi
          echo 'SectionEnd' >> installer.nsi
      - name: Build NSIS installer
        run: makensis installer.nsi
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: windows-installer
          path: setup.exe

  build-linux-x86:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y ruby-full wget ninja-build libappindicator3-1 gir1.2-appindicator3-0.1
          sudo gem install fpm
          pip install llama-cpp-python[server] pystray pillow pyinstaller
      
      - name: Download model
        run: wget https://huggingface.co/a5656789/qwen3-0.6b-q4/resolve/main/qwen3-0.6b-q4.gguf -O qwen3-0.6b-q4.gguf

      # 关键改动: 使用 cat <<EOF 保证缩进正确
      - name: Create and Build from .spec file
        run: |
          python_path=$(which python)
          cat > build.spec <<EOF
# build.spec
a = Analysis(
    ['edge_llm_base.py'],
    binaries=[('$python_path', '.')],
    datas=[('server_runner.py', '.'), ('qwen3-0.6b-q4.gguf', '.')],
    hiddenimports=['llama_cpp.server']
)
pyz = PYZ(a.pure, a.zipped_data)
exe = EXE(pyz, a.scripts, [], exclude_binaries=True, name='edge_llm_base', debug=False, console=False)
coll = COLLECT(exe, a.binaries, a.zipfiles, a.datas, name='edge_llm_base')
EOF
          pyinstaller build.spec
      
      - name: Create post-install script for fpm
        run: |
          echo '#!/bin/sh' > post-install.sh
          echo 'ln -sf /opt/edge-llm-base/edge_llm_base /usr/local/bin/edge_llm_base' >> post-install.sh
          chmod +x post-install.sh
      
      - name: Build deb package with fpm
        run: |
          fpm -s dir -t deb -n edge-llm-base -v 1.0 \
            --prefix /opt/edge-llm-base \
            --description "Edge LLM Base for Qwen3 with Model" \
            --after-install ./post-install.sh \
            -C dist/edge_llm_base \
            .
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: linux-x86-deb
          path: ./*.deb

  build-linux-arm64:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up QEMU for ARM64
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Build in ARM64 Docker
        run: |
          docker run --rm --privileged -v $(pwd):/app -w /app --platform=linux/arm64 \
            ubuntu:22.04 bash -c "
              set -e
              apt-get update
              apt-get install -y python3 python3-pip ruby-full wget ninja-build libappindicator3-1 gir1.2-appindicator3-0.1
              gem install fpm
              pip install llama-cpp-python[server] pystray pillow pyinstaller --extra-index-url https://abetlen.github.io/llama-cpp-python/whl/cpu
              
              wget https://huggingface.co/a5656789/qwen3-0.6b-q4/resolve/main/qwen3-0.6b-q4.gguf -O qwen3-0.6b-q4.gguf
              
              # 关键改动: 使用 cat <<EOF 保证缩进正确
              python_path=\$(which python3)
              cat > build.spec <<EOF
# build.spec
a = Analysis(
    ['edge_llm_base.py'],
    binaries=[('\$python_path', '.')],
    datas=[('server_runner.py', '.'), ('qwen3-0.6b-q4.gguf', '.')],
    hiddenimports=['llama_cpp.server']
)
pyz = PYZ(a.pure, a.zipped_data)
exe = EXE(pyz, a.scripts, [], exclude_binaries=True, name='edge_llm_base', debug=False, console=False)
coll = COLLECT(exe, a.binaries, a.zipfiles, a.datas, name='edge_llm_base')
EOF
              pyinstaller build.spec

              echo '#!/bin/sh' > post-install.sh
              echo 'ln -sf /opt/edge-llm-base/edge_llm_base /usr/local/bin/edge_llm_base' >> post-install.sh
              chmod +x post-install.sh

              fpm -s dir -t deb -n edge-llm-base -v 1.0 \
                --architecture arm64 \
                --prefix /opt/edge-llm-base \
                --description 'Edge LLM Base for Qwen3 with Model' \
                --after-install ./post-install.sh \
                -C dist/edge_llm_base \
                .
            "
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: linux-arm64-deb
          path: ./*_arm64.deb
