name: Build Edge LLM Base - True Offline Installers

on: [push, workflow_dispatch]

jobs:
  build-windows-standalone:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
      - name: Install dependencies
        run: pip install llama-cpp-python[server] pystray pillow pyinstaller uvicorn
      - name: Create icon file
        # 修正：为Python字符串添加了正确的引号
        run: python -c "from edge_llm_base import create_image; create_image('🤖').save('icon.png')"
      - name: Build PyInstaller executable
        run: pyinstaller --onefile --windowed --add-data "icon.png;." edge_llm_base.py
      - name: Download model and C++ Redist
        run: |
          Invoke-WebRequest -Uri https://huggingface.co/a5656789/qwen3-0.6b-q4/resolve/main/qwen3-0.6b-q4.gguf -OutFile dist/qwen3-0.6b-q4.gguf
          Invoke-WebRequest -Uri https://aka.ms/vs/17/release/vc_redist.x64.exe -OutFile vc_redist.x64.exe
      - name: Install NSIS
        run: choco install nsis -y
      - name: Create and Build NSIS Installer
        run: |
          echo '!define PRODUCT_NAME "Edge LLM Base"' > installer.nsi
          echo 'OutFile "Edge-LLM-Base-Windows-Installer.exe"' >> installer.nsi
          echo 'InstallDir "$PROGRAMFILES\EdgeLLMBase"' >> installer.nsi
          echo 'RequestExecutionLevel admin' >> installer.nsi
          echo 'Section "Main"' >> installer.nsi
          echo '  SetOutPath "$INSTDIR"' >> installer.nsi
          echo '  File "vc_redist.x64.exe"' >> installer.nsi
          echo '  ExecWait ''"$INSTDIR\vc_redist.x64.exe" /install /quiet /norestart''' >> installer.nsi
          echo '  Delete "$INSTDIR\vc_redist.x64.exe"' >> installer.nsi
          echo '  File "dist\edge_llm_base.exe"' >> installer.nsi
          echo '  File "dist\qwen3-0.6b-q4.gguf"' >> installer.nsi
          echo '  WriteUninstaller "$INSTDIR\uninstall.exe"' >> installer.nsi
          echo '  CreateShortCut "$DESKTOP\Edge LLM Base.lnk" "$INSTDIR\edge_llm_base.exe"' >> installer.nsi
          echo 'SectionEnd' >> installer.nsi
          makensis installer.nsi
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: windows-installer-standalone
          path: Edge-LLM-Base-Windows-Installer.exe

  build-linux-appimage:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        arch: [x86_64, aarch64]
    steps:
      - uses: actions/checkout@v4
      - name: Set up QEMU for ARM64 build if needed
        if: matrix.arch == 'aarch64'
        uses: docker/setup-qemu-action@v3
        with:
          platforms: arm64
      - name: Build AppImage using Docker
        run: |
          docker run --rm -v $(pwd):/app -w /app --platform linux/${{ matrix.arch == 'aarch64' && 'arm64' || 'amd64' }} \
            ubuntu:22.04 bash -c '
              set -ex
              export DEBIAN_FRONTEND=noninteractive
              apt-get update
              apt-get install -y python3-pip python3-venv wget fuse libglib2.0-0 ninja-build
              
              python3 -m venv venv
              source venv/bin/activate
              
              pip install --upgrade pip
              pip install llama-cpp-python[server] pystray pillow pyinstaller uvicorn --extra-index-url https://abetlen.github.io/llama-cpp-python/whl/cpu

              # 修正：为Python字符串添加了正确的引号
              python3 -c "from edge_llm_base import create_image; create_image(''🤖'').save(''icon.png'')"
              
              echo "[Desktop Entry]" > edge_llm_base.desktop
              echo "Name=Edge LLM Base" >> edge_llm_base.desktop
              echo "Exec=AppRun" >> edge_llm_base.desktop
              echo "Icon=icon" >> edge_llm_base.desktop
              echo "Type=Application" >> edge_llm_base.desktop
              echo "Categories=Utility;" >> edge_llm_base.desktop
              
              pyinstaller --noconfirm --onefile --windowed --add-data "icon.png:." edge_llm_base.py
              
              wget https://github.com/linuxdeploy/linuxdeploy/releases/download/continuous/linuxdeploy-${{ matrix.arch }}.AppImage -O linuxdeploy.AppImage
              chmod +x linuxdeploy.AppImage
              
              ./linuxdeploy.AppImage --appdir AppDir \
                -e dist/edge_llm_base \
                -i icon.png \
                -d edge_llm_base.desktop
              
              cp dist/edge_llm_base AppDir/usr/bin/
              wget https://huggingface.co/a5656789/qwen3-0.6b-q4/resolve/main/qwen3-0.6b-q4.gguf -O AppDir/usr/bin/qwen3-0.6b-q4.gguf
              
              echo "#!/bin/sh" > AppDir/AppRun
              echo "cd \"\$(dirname \"\$0\")/usr/bin\"" >> AppDir/AppRun
              echo "./edge_llm_base" >> AppDir/AppRun
              chmod +x AppDir/AppRun
              
              wget https://github.com/AppImage/AppImageKit/releases/download/continuous/appimagetool-${{ matrix.arch }}.AppImage -O appimagetool.AppImage
              chmod +x appimagetool.AppImage
              ./appimagetool.AppImage AppDir
            '
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: linux-appimage-${{ matrix.arch }}
          path: ./*${{ matrix.arch }}.AppImage