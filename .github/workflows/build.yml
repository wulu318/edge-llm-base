name: Build Edge LLM Base Installers with Model

on: [push, workflow_dispatch]

jobs:
  build-windows:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
      - name: Install dependencies
        run: |
          pip install llama-cpp-python[server] pystray pillow pyinstaller
      - name: Download model from Hugging Face
        run: |
          Invoke-WebRequest -Uri https://huggingface.co/a5656789/qwen3-0.6b-q4/resolve/main/qwen3-0.6b-q4.gguf -OutFile qwen3-0.6b-q4.gguf
      - name: Create PyInstaller spec file
        run: |
          echo "# -*- mode: python ; coding: utf-8 -*-" > edge_llm_base.spec
          echo "block_cipher = None" >> edge_llm_base.spec
          echo "a = Analysis(['edge_llm_base.py'], pathex=[], binaries=[], datas=[('qwen3-0.6b-q4.gguf', '.')], hiddenimports=['llama_cpp.server', 'llama_cpp', 'pystray', 'PIL'], hookspath=[], hooksconfig={}, runtime_hooks=[], excludes=[], win_no_prefer_redirects=False, win_private_assemblies=False, cipher=block_cipher, noarchive=False)" >> edge_llm_base.spec
          echo "pyz = PYZ(a.pure, a.zipped_data, cipher=block_cipher)" >> edge_llm_base.spec
          echo "exe = EXE(pyz, a.scripts, a.binaries, a.zipfiles, a.datas, [], name='edge_llm_base', debug=False, bootloader_ignore_signals=False, strip=False, upx=True, upx_exclude=[], runtime_tmpdir=None, console=False, disable_windowed_traceback=False, argv_emulation=False, target_arch=None, codesign_identity=None, entitlements_file=None)" >> edge_llm_base.spec
      - name: Build PyInstaller executable
        run: pyinstaller edge_llm_base.spec
      - name: Install NSIS
        run: choco install nsis -y
      - name: Create NSIS installer script
        run: |
          echo '!define PRODUCT_NAME "Edge LLM Base"' > installer.nsi
          echo '!define PRODUCT_VERSION "1.0"' >> installer.nsi
          echo '!define PRODUCT_PUBLISHER "YourName"' >> installer.nsi
          echo 'SetCompressor lzma' >> installer.nsi
          echo 'Name "${PRODUCT_NAME} ${PRODUCT_VERSION}"' >> installer.nsi
          echo 'OutFile "EdgeLLMBase_Setup.exe"' >> installer.nsi
          echo 'InstallDir "$PROGRAMFILES\EdgeLLMBase"' >> installer.nsi
          echo 'RequestExecutionLevel admin' >> installer.nsi
          echo 'ShowInstDetails show' >> installer.nsi
          echo 'Section "MainSection" SEC01' >> installer.nsi
          echo '  SetOutPath "$INSTDIR"' >> installer.nsi
          echo '  SetOverwrite ifnewer' >> installer.nsi
          echo '  File "dist\edge_llm_base.exe"' >> installer.nsi
          echo '  File "qwen3-0.6b-q4.gguf"' >> installer.nsi
          echo '  CreateDirectory "$SMPROGRAMS\Edge LLM Base"' >> installer.nsi
          echo '  CreateShortCut "$SMPROGRAMS\Edge LLM Base\Edge LLM Base.lnk" "$INSTDIR\edge_llm_base.exe"' >> installer.nsi
          echo '  CreateShortCut "$DESKTOP\Edge LLM Base.lnk" "$INSTDIR\edge_llm_base.exe"' >> installer.nsi
          echo 'SectionEnd' >> installer.nsi
          echo 'Section -Post' >> installer.nsi
          echo '  WriteUninstaller "$INSTDIR\uninstall.exe"' >> installer.nsi
          echo '  WriteRegStr HKLM "Software\Microsoft\Windows\CurrentVersion\Uninstall\${PRODUCT_NAME}" "DisplayName" "${PRODUCT_NAME}"' >> installer.nsi
          echo '  WriteRegStr HKLM "Software\Microsoft\Windows\CurrentVersion\Uninstall\${PRODUCT_NAME}" "UninstallString" "$INSTDIR\uninstall.exe"' >> installer.nsi
          echo '  WriteRegStr HKLM "Software\Microsoft\Windows\CurrentVersion\Uninstall\${PRODUCT_NAME}" "DisplayVersion" "${PRODUCT_VERSION}"' >> installer.nsi
          echo '  WriteRegStr HKLM "Software\Microsoft\Windows\CurrentVersion\Uninstall\${PRODUCT_NAME}" "Publisher" "${PRODUCT_PUBLISHER}"' >> installer.nsi
          echo 'SectionEnd' >> installer.nsi
          echo 'Section Uninstall' >> installer.nsi
          echo '  Delete "$INSTDIR\edge_llm_base.exe"' >> installer.nsi
          echo '  Delete "$INSTDIR\qwen3-0.6b-q4.gguf"' >> installer.nsi
          echo '  Delete "$INSTDIR\uninstall.exe"' >> installer.nsi
          echo '  Delete "$SMPROGRAMS\Edge LLM Base\Edge LLM Base.lnk"' >> installer.nsi
          echo '  Delete "$DESKTOP\Edge LLM Base.lnk"' >> installer.nsi
          echo '  RMDir "$SMPROGRAMS\Edge LLM Base"' >> installer.nsi
          echo '  RMDir "$INSTDIR"' >> installer.nsi
          echo '  DeleteRegKey HKLM "Software\Microsoft\Windows\CurrentVersion\Uninstall\${PRODUCT_NAME}"' >> installer.nsi
          echo 'SectionEnd' >> installer.nsi
      - name: Build NSIS installer
        run: makensis installer.nsi
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: windows-installer
          path: EdgeLLMBase_Setup.exe

  build-linux-x86:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y ruby-full wget ninja-build libappindicator3-1 gir1.2-appindicator3-0.1 libgtk-3-0 libnotify4 libnss3 libxss1 libasound2 libxtst6 xdg-utils
          sudo gem install fpm
          pip install llama-cpp-python[server] pystray pillow pyinstaller
      - name: Download model from Hugging Face
        run: wget https://huggingface.co/a5656789/qwen3-0.6b-q4/resolve/main/qwen3-0.6b-q4.gguf -O qwen3-0.6b-q4.gguf
      - name: Create PyInstaller spec file
        run: |
          echo "# -*- mode: python ; coding: utf-8 -*-" > edge_llm_base.spec
          echo "block_cipher = None" >> edge_llm_base.spec
          echo "a = Analysis(['edge_llm_base.py'], pathex=[], binaries=[], datas=[('qwen3-0.6b-q4.gguf', '.')], hiddenimports=['llama_cpp.server', 'llama_cpp', 'pystray', 'PIL'], hookspath=[], hooksconfig={}, runtime_hooks=[], excludes=[], win_no_prefer_redirects=False, win_private_assemblies=False, cipher=block_cipher, noarchive=False)" >> edge_llm_base.spec
          echo "pyz = PYZ(a.pure, a.zipped_data, cipher=block_cipher)" >> edge_llm_base.spec
          echo "exe = EXE(pyz, a.scripts, a.binaries, a.zipfiles, a.datas, [], name='edge_llm_base', debug=False, bootloader_ignore_signals=False, strip=False, upx=True, upx_exclude=[], runtime_tmpdir=None, console=False, disable_windowed_traceback=False, argv_emulation=False, target_arch=None, codesign_identity=None, entitlements_file=None)" >> edge_llm_base.spec
      - name: Build PyInstaller executable
        run: pyinstaller edge_llm_base.spec
      - name: Create post-install script for fpm
        run: |
          echo '#!/bin/bash' > post-install.sh
          echo '# 设置执行权限' >> post-install.sh
          echo 'chmod +x /opt/edge-llm-base/edge_llm_base' >> post-install.sh
          echo '' >> post-install.sh
          echo '# 创建桌面快捷方式' >> post-install.sh
          echo 'mkdir -p $HOME/.local/share/applications' >> post-install.sh
          echo 'cat > $HOME/.local/share/applications/edge-llm-base.desktop << EOF' >> post-install.sh
          echo '[Desktop Entry]' >> post-install.sh
          echo 'Name=Edge LLM Base' >> post-install.sh
          echo 'Exec=/opt/edge-llm-base/edge_llm_base' >> post-install.sh
          echo 'Icon=application-x-executable' >> post-install.sh
          echo 'Type=Application' >> post-install.sh
          echo 'Categories=Utility;' >> post-install.sh
          echo 'EOF' >> post-install.sh
          echo '' >> post-install.sh
          echo 'chmod +x $HOME/.local/share/applications/edge-llm-base.desktop' >> post-install.sh
          echo '' >> post-install.sh
          echo '# 创建桌面图标' >> post-install.sh
          echo 'if [ -d $HOME/Desktop ]; then' >> post-install.sh
          echo '    cp $HOME/.local/share/applications/edge-llm-base.desktop $HOME/Desktop/' >> post-install.sh
          echo '    chmod +x $HOME/Desktop/edge-llm-base.desktop' >> post-install.sh
          echo 'fi' >> post-install.sh
          chmod +x post-install.sh
      - name: Create pre-uninstall script for fpm
        run: |
          echo '#!/bin/bash' > pre-uninstall.sh
          echo '# 删除桌面快捷方式' >> pre-uninstall.sh
          echo 'rm -f $HOME/.local/share/applications/edge-llm-base.desktop' >> pre-uninstall.sh
          echo 'rm -f $HOME/Desktop/edge-llm-base.desktop' >> pre-uninstall.sh
          chmod +x pre-uninstall.sh
      - name: Build deb package with fpm
        run: |
          mkdir -p deb-root/opt/edge-llm-base
          cp dist/edge_llm_base deb-root/opt/edge-llm-base/
          cp qwen3-0.6b-q4.gguf deb-root/opt/edge-llm-base/
          fpm -s dir -t deb -n edge-llm-base -v 1.0 \
            --prefix / -C deb-root \
            --description "Edge LLM Base for Qwen3 with Model" \
            --depends "libappindicator3-1" \
            --depends "libgtk-3-0" \
            --depends "libnotify4" \
            --depends "libnss3" \
            --depends "libxss1" \
            --depends "libasound2" \
            --depends "libxtst6" \
            --depends "xdg-utils" \
            --after-install ./post-install.sh \
            --before-remove ./pre-uninstall.sh
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: linux-x86-deb
          path: ./*.deb

  build-linux-arm64:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up QEMU for ARM64
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Build in ARM64 Docker
        run: |
          docker run --rm --privileged -v $(pwd):/app -w /app --platform=linux/arm64 \
            ubuntu:22.04 bash -c "
              set -e
              apt-get update
              apt-get install -y python3 python3-pip ruby-full wget ninja-build libappindicator3-1 gir1.2-appindicator3-0.1 libgtk-3-0 libnotify4 libnss3 libxss1 libasound2 libxtst6 xdg-utils
              gem install fpm
              pip install llama-cpp-python[server] pystray pillow pyinstaller --extra-index-url https://abetlen.github.io/llama-cpp-python/whl/cpu
              
              # Download model
              wget https://huggingface.co/a5656789/qwen3-0.6b-q4/resolve/main/qwen3-0.6b-q4.gguf -O qwen3-0.6b-q4.gguf
              
              # Create spec file
              echo '# -*- mode: python ; coding: utf-8 -*-' > edge_llm_base.spec
              echo 'block_cipher = None' >> edge_llm_base.spec
              echo 'a = Analysis([\"edge_llm_base.py\"], pathex=[], binaries=[], datas=[(\"qwen3-0.6b-q4.gguf\", \".\")], hiddenimports=[\"llama_cpp.server\", \"llama_cpp\", \"pystray\", \"PIL\"], hookspath=[], hooksconfig={}, runtime_hooks=[], excludes=[], win_no_prefer_redirects=False, win_private_assemblies=False, cipher=block_cipher, noarchive=False)' >> edge_llm_base.spec
              echo 'pyz = PYZ(a.pure, a.zipped_data, cipher=block_cipher)' >> edge_llm_base.spec
              echo 'exe = EXE(pyz, a.scripts, a.binaries, a.zipfiles, a.datas, [], name=\"edge_llm_base\", debug=False, bootloader_ignore_signals=False, strip=False, upx=True, upx_exclude=[], runtime_tmpdir=None, console=False, disable_windowed_traceback=False, argv_emulation=False, target_arch=None, codesign_identity=None, entitlements_file=None)' >> edge_llm_base.spec
              
              # Build executable
              pyinstaller edge_llm_base.spec
              
              # Create post-install script
              echo '#!/bin/bash' > post-install.sh
              echo '# 设置执行权限' >> post-install.sh
              echo 'chmod +x /opt/edge-llm-base/edge_llm_base' >> post-install.sh
              echo '' >> post-install.sh
              echo '# 创建桌面快捷方式' >> post-install.sh
              echo 'mkdir -p \$HOME/.local/share/applications' >> post-install.sh
              echo 'cat > \$HOME/.local/share/applications/edge-llm-base.desktop << EOF' >> post-install.sh
              echo '[Desktop Entry]' >> post-install.sh
              echo 'Name=Edge LLM Base' >> post-install.sh
              echo 'Exec=/opt/edge-llm-base/edge_llm_base' >> post-install.sh
              echo 'Icon=application-x-executable' >> post-install.sh
              echo 'Type=Application' >> post-install.sh
              echo 'Categories=Utility;' >> post-install.sh
              echo 'EOF' >> post-install.sh
              echo '' >> post-install.sh
              echo 'chmod +x \$HOME/.local/share/applications/edge-llm-base.desktop' >> post-install.sh
              echo '' >> post-install.sh
              echo '# 创建桌面图标' >> post-install.sh
              echo 'if [ -d \$HOME/Desktop ]; then' >> post-install.sh
              echo '    cp \$HOME/.local/share/applications/edge-llm-base.desktop \$HOME/Desktop/' >> post-install.sh
              echo '    chmod +x \$HOME/Desktop/edge-llm-base.desktop' >> post-install.sh
              echo 'fi' >> post-install.sh
              chmod +x post-install.sh
              
              # Create pre-uninstall script
              echo '#!/bin/bash' > pre-uninstall.sh
              echo '# 删除桌面快捷方式' >> pre-uninstall.sh
              echo 'rm -f \$HOME/.local/share/applications/edge-llm-base.desktop' >> pre-uninstall.sh
              echo 'rm -f \$HOME/Desktop/edge-llm-base.desktop' >> pre-uninstall.sh
              chmod +x pre-uninstall.sh
              
              # Build deb package
              mkdir -p deb-root/opt/edge-llm-base
              cp dist/edge_llm_base deb-root/opt/edge-llm-base/
              cp qwen3-0.6b-q4.gguf deb-root/opt/edge-llm-base/
              fpm -s dir -t deb -n edge-llm-base -v 1.0 \
                --prefix / -C deb-root \
                --architecture arm64 \
                --description 'Edge LLM Base for Qwen3 with Model' \
                --depends 'libappindicator3-1' \
                --depends 'libgtk-3-0' \
                --depends 'libnotify4' \
                --depends 'libnss3' \
                --depends 'libxss1' \
                --depends 'libasound2' \
                --depends 'libxtst6' \
                --depends 'xdg-utils' \
                --after-install ./post-install.sh \
                --before-remove ./pre-uninstall.sh
            "
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: linux-arm64-deb
          path: ./*_arm64.deb
